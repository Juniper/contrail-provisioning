#!/usr/bin/python
#
# Copyright (C) 2012, Red Hat, Inc.
# Alan Pevec <apevec@redhat.com>
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

import iniparse
import sys
import json

parameter = value = None

def usage():
    sys.stderr.write(sys.argv[0] +
                     " --set|--del|--get|--has config_file section [parameter] [value]\n")
    sys.exit(1)

try:
    mode = sys.argv[1]
    if mode not in ('--set', '--del', '--get', '--has'):
        usage()
    cfgfile = sys.argv[2]
    section = sys.argv[3]
    try:
        parameter = sys.argv[4]
        value = sys.argv[5]
    except IndexError:
        if mode == '--set':
            usage()
    else:
        if mode == '--del' or mode == '--get' or mode == '--has':
            sys.stderr.write("A value should not be specified with %s\n" % (mode))
            usage()
except IndexError:
    usage()

conf = iniparse.ConfigParser()
conf.readfp(open(cfgfile))

if mode == '--set':
    if not conf.has_section(section):
        conf.add_section(section)
        value += '\n'
    conf.set(section, parameter, value)
    with open(cfgfile, 'w') as f:
        conf.write(f)
elif mode == '--get':
    if parameter is None:
        items = conf.items(section)
        sys.stdout.write("%s\n" % json.dumps(items))
    else:
        value = conf.get(section, parameter)
        sys.stdout.write("%s\n" % (str(value)))
elif mode == "--has":
    if parameter is None:
        if conf.has_section(section):
            sys.stdout.write("1\n")
        else:
            sys.stdout.write("0\n")
    else:
        if conf.has_option(section, parameter):
            sys.stdout.write("1\n")
        else:
            sys.stdout.write("0\n")
else:
    if parameter is None:
        conf.remove_section(section)
    elif value is None:
        conf.remove_option(section, parameter)
    with open(cfgfile, 'w') as f:
        conf.write(f)
